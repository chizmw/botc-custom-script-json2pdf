---
changesDir: .changes
unreleasedDir: unreleased
headerPath: header.tpl.md
changelogPath: CHANGELOG.md
versionExt: md
kindFormat: '### {{.Kind}}'
kinds:
  - label: Added
    auto: minor
  - label: Changed
    auto: major
  - label: Deprecated
    auto: minor
  - label: Removed
    auto: major
  - label: Fixed
    auto: patch
  - label: Security
    auto: patch
  - label: Dependencies
    auto: patch
newlines:
  afterChange: 0
  afterChangelogHeader: 0
  afterChangelogVersion: 0
  afterKind: 1
  afterVersion: 1
  beforeChangelogVersion: 1
  beforeFooterFile: 0
  beforeKind: 0
  endOfVersion: 0
envPrefix: CHANGIE_

replacements:
  - path: README.md
    find: version-v.*-blue
    replace: version-v{{.Version}}-blue

custom:
  - key: GithubIssue
    label: Github Issue (optional)
    type: int
    optional: true

# our changeFormat is a bit more complex than the default one
# we want to add a link to the github issue if it's provided
# and we want to link to any mentioned issues in the body.
# Github doesn't treat '#123' as anything special in markdown files
# so we need to add the link ourselves.
# We'll use CHANGIE_REPO_URL to get the repo url if we have it, and construct a
# link; otherwise we'll just use the issue number.
changeFormat: >-
  * {{.Body}} {{- if not (eq .Custom.GithubIssue "")}}
    {{- if .Env.REPO_URL }}
      [#{{.Custom.GithubIssue}}]
      ({{.Env.REPO_URL}}/issues/{{.Custom.GithubIssue}})
    {{- else}}
      [#{{.Custom.GithubIssue}}]
    {{- end}}
  {{- end}}

# similar for linking the release in versionFormat
# we'll use CHANGIE_REPO_URL to get the repo url if we have it, and construct a
# link; otherwise we'll just use the version.
versionFormat: >-
  ## {{- if .Env.REPO_URL }}
    [v{{.Version}}]({{.Env.REPO_URL}}/releases/tag/{{.Version}})
  {{- else }}
    v{{.Version}}
  {{- end }}
  ({{.Time.Format "2006-01-02"}})
