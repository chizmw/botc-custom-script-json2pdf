---
openapi: 3.0.0
info:
  title: Arcane Scripts API
  description: API for requesting and retrieving rendered scripts
  version: v0.3.4

paths:
  # top-level OPTIONS to placate CORS
  /:
    # https://dev.to/rolfstreefkerk/openapi-with-terraform-on-aws-api-gateway-17je
    options:
      responses:
        200:
          $ref: '#/components/responses/cors'
        500:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'7200'"
              # yamllint disable-line rule:line-length
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE'"
              # yamllint disable-line rule:line-length
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        type: mock

  /render:
    post:
      description: Render a PDF from a script JSON object
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptTopLevelResponse'
      x-amazon-apigateway-integration:
        uri: ${post_lambda_arn}
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy

    # https://dev.to/rolfstreefkerk/openapi-with-terraform-on-aws-api-gateway-17je
    options:
      responses:
        200:
          $ref: '#/components/responses/cors'
        500:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'7200'"
              # yamllint disable-line rule:line-length
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE'"
              # yamllint disable-line rule:line-length
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        type: mock

components:
  schemas:
    # types
    RequestId:
      type: string
      nullable: false
      example: 057a3874-625a-41f0-a89a-50799e535f44

    Status:
      type: string
      nullable: false
      enum: [received, processing, complete, failed]
      example: processing

    DownloadURL:
      type: string
      nullable: true
      example: https://somewhere.in.aws/b4f7-4d4acce98986.pdf

    # responses

    ScriptResponse:
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        status:
          $ref: '#/components/schemas/Status'
        download_url:
          $ref: '#/components/schemas/DownloadURL'

    ScriptTopLevelResponse:
      type: object
      properties:
        message:
          type: string
          nullable: false
          example: we didn't write this yet
        request_id:
          $ref: '#/components/schemas/RequestId'
        status:
          $ref: '#/components/schemas/Status'

    Empty:
      title: Empty Schema
      type: object

  responses:
    cors:
      description: 200 response
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Max-Age:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Empty'
